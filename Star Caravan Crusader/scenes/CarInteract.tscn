[gd_scene load_steps=9 format=2]

[ext_resource path="res://Darkness env.tres" type="Environment" id=1]
[ext_resource path="res://scripts/CarInteract.gd" type="Script" id=2]
[ext_resource path="res://scripts/Camera that follows.gd" type="Script" id=3]
[ext_resource path="res://scenes/Main car.tscn" type="PackedScene" id=4]

[sub_resource type="Shader" id=2]
code = "shader_type spatial;
render_mode unshaded, shadows_disabled, depth_test_disable, depth_draw_never;

uniform int color_depth : hint_range(1, 8) = 5;
uniform bool dithering = true;
uniform int resolution_scale = 4;

int dithering_pattern(ivec2 fragcoord) {
	const int pattern[] = {
		-4, +0, -3, +1, 
		+2, -2, +3, -1, 
		-3, +1, -4, +0, 
		+3, -1, +2, -2
	};
	
	int x = fragcoord.x % 4;
	int y = fragcoord.y % 4;
	
	return pattern[y * 4 + x];
}

void vertex() {
	POSITION = vec4(VERTEX, 1.0);
}

void fragment() {
	ivec2 uv = ivec2(FRAGCOORD.xy / float(resolution_scale));
	vec3 color = texelFetch(SCREEN_TEXTURE, uv * resolution_scale, 0).rgb;
	
	// Convert from [0.0, 1.0] range to [0, 255] range
	ivec3 c = ivec3(round(color * 255.0));
	
	// Apply the dithering pattern
	if (dithering) {
		c += ivec3(dithering_pattern(uv));
	}
	
	// Truncate from 8 bits to color_depth bits
	c >>= (8 - color_depth);

	// Convert back to [0.0, 1.0] range
	ALBEDO = vec3(c) / float(1 << color_depth);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )
shader_param/color_depth = 6
shader_param/dithering = true
shader_param/resolution_scale = 1

[sub_resource type="QuadMesh" id=4]
material = SubResource( 3 )
size = Vector2( 2, 2 )

[sub_resource type="SphereShape" id=1]
radius = 4.0

[node name="CarInteract" type="Spatial"]
script = ExtResource( 2 )

[node name="Control" type="Control" parent="."]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.0
margin_top = -20.0
margin_right = 20.0
margin_bottom = 20.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Control"]
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -48.0
margin_top = -47.5359
margin_right = 48.0
margin_bottom = -33.5359
text = "E: Enter the car"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Camera" type="Camera" parent="."]
transform = Transform( 1, 0, 0, 0, 0.946418, 0.322943, 0, -0.322943, 0.946418, 0, 2.53844, 5.48759 )
environment = ExtResource( 1 )
current = true
script = ExtResource( 3 )

[node name="Tween" type="Tween" parent="Camera"]

[node name="filtro" type="MeshInstance" parent="Camera"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, -0.357741, -0.363299 )
mesh = SubResource( 4 )
material/0 = null

[node name="Main car" parent="." instance=ExtResource( 4 )]

[node name="Area" type="Area" parent="Main car"]

[node name="CollisionShape" type="CollisionShape" parent="Main car/Area"]
shape = SubResource( 1 )

[connection signal="body_entered" from="Main car/Area" to="." method="_on_Area_body_entered"]
[connection signal="body_exited" from="Main car/Area" to="." method="_on_Area_body_exited"]
